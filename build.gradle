plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.dwalter'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

compileJava {
    options.compilerArgs << '-parameters'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.mapstruct:mapstruct:1.4.1.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.1.Final'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    compileOnly 'org.projectlombok:lombok'
    compile 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.19.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    testImplementation("org.assertj:assertj-core:3.19.0")
}

test {
    useJUnitPlatform()
}

task generatePostsAndComments() {
    doLast {
        File dataSql = file("src/main/resources/database/05_add_values_to_comment_table.sql")
        dataSql.write("")
        dataSql.append("--liquibase formatted sql\n" +
                "--changeset dwalter:5\n")
        //komentarze
        for (int i = 1; i < 50; i++) {
            int roomId = 1 + i / 10
            dataSql.append("insert into COMMENT(id, content, created, room_id) " +
                    "values (${i}, 'Comment ${i}', '" + LocalDateTime.now().minusDays(100 - i) + "', ${roomId});\n")
        }
    }
}
